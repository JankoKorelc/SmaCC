generated
symbolNames
	^ #('"del"' '"pass"' '"print"' '">>"' '"**="' '"//="' '"break"' '"continue"' '">>="' '"as"' '"global"' '"from"' '"yield"' '"raise"' '"import"' '"<<="' '"return"' '"exec"' '"*"' '"**"' '":"' '","' '"@"' '"def"' '"="' '";"' '"."' '"&="' '"|="' '"/="' '"%="' '"-="' '"*="' '"^="' '"+="' '"in"' '"^"' '"&"' '"assert"' '"|"' '"<>"' '"!="' '"<<"' '"+"' '"<="' '"`"' '"class"' '"//"' '"~"' '"/"' '"%"' '"is"' '"-"' '">="' '"for"' '"try"' '"else"' '"=="' '"if"' '"elif"' '"finally"' '"while"' '"with"' '"<"' '"not"' '"and"' '">"' '"lambda"' '"except"' '"or"' '<name>' '<string>' '<number>' '<emptyLine>' '<blankLine>' '<indent>' '<noindent>' '<comment>' '<whitespace>' '<NEWLINE>' '<lparen>' '<rparen>' '<lbrack>' '<rbrack>' '<lcurly>' '<rcurly>' 'testlist' 'newline_opts' 'dotted_name' 'paren_arglist_opt' 'decorator' 'arglist_opt' 'arglist' 'decorators' 'classdef' 'funcdef' 'decorated' 'stmt' 'parameters' 'suite' 'varargslist_opt' 'compound_stmt' 'fpdef' 'init_opt' 'comma_opt' 'test' 'fplist' 'small_stmt' 'semicolon_opt' 'assign_after' 'augassign' 'yield_or_testlist' 'expr_stmt' 'yield_expr' 'testlist_opt' 'print_stmt' 'exprlist' 'del_stmt' 'pass_stmt' 'break_stmt' 'continue_stmt' 'return_stmt' 'raise_stmt' 'yield_stmt' 'flow_stmt' 'import_name' 'import_from' 'import_stmt' 'dotted_as_names' 'dotopt_dotted_name' 'simple_stmt' 'dots' 'import_as_names' 'import_as_name' 'dotted_as_name' 'import_as_names_in' 'namelist' 'global_stmt' 'eval_input' 'test_test_opt' 'exec_stmt' 'assert_stmt' 'if_stmt' 'while_stmt' 'for_stmt' 'try_stmt' 'with_stmt' 'elifs_opt' 'else_opt' 'except_list' 'finally_opt' 'except_clause' 'with_items' 'with_item' 'stmts' 'old_test' 'old_tests' 'testlist_safe' 'or_test' 'old_lambdef' 'and_test' 'not_test' 'comparison' 'comp_op' 'xor_expr' 'and_expr' 'shift_expr' 'arith_expr' 'term' 'factor' 'power' 'atom' 'trailers_opt' 'trailer' 'testlist_comp' 'listmaker' 'dictorsetmaker' 'testlist1' 'import_names_star' 'strings' 'single_input' 'list_for' 'comp_for' 'lambdef' 'subscriptlist' 'subscript' 'test_opt' 'sliceop' 'more_tests' 'argument' 'more_args' 'list_if' 'list_iter' 'comp_if' 'comp_iter' 'E O F' 'error' 'B e g i n' 'expr' 'file_input' '<DEDENT>' '<INDENT>' 'varargslist')